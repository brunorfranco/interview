
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package br.com.megasoft.arrecadanet.ws;

import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

import javax.xml.XMLConstants;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import javax.xml.transform.stream.StreamSource;
import javax.xml.validation.Schema;
import javax.xml.validation.SchemaFactory;
import javax.xml.validation.Validator;

import org.w3c.dom.Document;
import org.xml.sax.SAXException;

import br.com.megasoft.arrecadanet.bean.NfeMunicipalRpsXmlWsHandler;
import br.com.megasoft.arrecadanet.bean.RpsXmlNfeBean;
import br.com.megasoft.arrecadanet.business.NfeMunicipalBusiness;
import br.com.megasoft.arrecadanet.business.NfeMunicipalUsuarioBusiness;
import br.com.megasoft.arrecadanet.business.PrefeituraBusiness;
import br.com.megasoft.arrecadanet.dao.NfeMunicipalDao;
import br.com.megasoft.arrecadanet.dao.NfeMunicipalWsDao;
import br.com.megasoft.arrecadanet.entity.NfeMunicipal;
import br.com.megasoft.arrecadanet.entity.NfeMunicipalUsuario;
import br.com.megasoft.arrecadanet.entity.NfeMunicipalWs;
import br.com.megasoft.arrecadanet.entity.Prefeitura;
import br.com.megasoft.arrecadanet.entity.enumerated.CertificadoTransmissaoTipo;
import br.com.megasoft.arrecadanet.entity.enumerated.NfeMunicipalWsEnum;
import br.com.megasoft.arrecadanet.ws.crypto.ICPBrasil;
import br.com.megasoft.arrecadanet.ws.crypto.ValidateCrypto;
import br.com.megasoft.arrecadanet.ws.crypto.ValidateCrypto.ValidateCryptoResult;
import br.com.megasoft.core.business.MegaBusinessException;
import br.com.megasoft.core.util.CpfCnpjUtil;
import br.com.megasoft.core.util.DateUtil;
import br.com.megasoft.core.util.StringUtil;

/**
 * This class was generated by Apache CXF 2.7.7
 * 2013-11-06T15:21:50.423-02:00
 * Generated source version: 2.7.7
 * 
 */
@javax.jws.WebService(serviceName = "NfseWSService",
                      portName = "nfseSOAP",
                      targetNamespace = "http://ws.megasoftarrecadanet.com.br",
                      endpointInterface = "br.com.megasoft.arrecadanet.ws.Nfse")
                      
public class NfseImpl implements Nfse {

	private final NfeMunicipalBusiness nfeMunicipalBusiness = new NfeMunicipalBusiness();
	private final String XSD = "/../xsd/nfse_v01.xsd";

//    private static final Logger LOG = Logger.getLogger(NfseImpl.class.getName());

    public Output gerarNfse(Input parameters) { 

    		byte[] xmlCabecalho = parameters.getNfseCabecMsg().getBytes();

    		byte[] xmlDados = parameters.getNfseDadosMsg().getBytes();
        	StringBuffer mensagem = new StringBuffer();
        	RpsXmlNfeBean rpsXml = null;
        	try {

        		// Valida XML Cacecalho
				this._validaXmlXsd(xmlCabecalho);

        		// Valida XML Dados
				this._validaXmlXsd(xmlDados);

				// Valida Criptografia
				ValidateCryptoResult validateCryptoResult = new ValidateCrypto(xmlDados).run();

				// Verifica Assinatura
				if(!validateCryptoResult.isValidate())
					throw new MegaBusinessException("Arquivo enviado com erro na assinatura.");

				if(!validateCryptoResult.isValidateDate())
					throw new MegaBusinessException("Certificado utilizado na assinatura expirado.");

				// Processa XML
				rpsXml =  this._gerarNfseHandlerXML(xmlDados);

				// Verifica Prestador
				NfeMunicipalWs municipalWs = new NfeMunicipalWsDao().consultaCpfCnpjInscMunicipal(rpsXml.getNfe().getEconomicoCpfCnpj(), rpsXml.getNfe().getEconomicoInscMunicipal());
				if (null == municipalWs || municipalWs.getStatus() == NfeMunicipalWsEnum.C)
					throw new MegaBusinessException("Prestador não autorizado.");

				ICPBrasil icpBrasil = new ICPBrasil(validateCryptoResult.getX509Certificate());
				String cpfCnpjWs = (CertificadoTransmissaoTipo.P.equals(municipalWs.getTipoTransmissao()))? StringUtil.clean(rpsXml.getNfe().getEconomicoCpfCnpj()) : StringUtil.clean(municipalWs.getCpfTransmissor());
				if (!cpfCnpjWs.equals(icpBrasil.getCNPJ()))
					throw new MegaBusinessException("A assinatura deve ser efetuada com o certificado digital do prestador.");

				// Usuario WS
				NfeMunicipalUsuario usuario = new NfeMunicipalUsuarioBusiness().usuarioWebService(municipalWs.getEconomico());

				if (null == usuario)
					throw new MegaBusinessException("Usuário não encontrado.");

				// Atribui valores aos Objetos
				rpsXml.getNfe().getRps().setObjects(usuario.economico(), usuario);
				this.nfeMunicipalBusiness.setInfoEntity(rpsXml.getNfe(), usuario);

				//Valida
				List<String> validarNfeWs = this.nfeMunicipalBusiness.validarNfeWs(rpsXml.getNfe(), usuario);
				rpsXml.getErro().addAll(validarNfeWs);

				if (validarNfeWs.isEmpty()) {

					// Salva Nota Fiscal
					if (municipalWs.getStatus() == NfeMunicipalWsEnum.P) {
						this.nfeMunicipalBusiness.salvar(rpsXml.getNfe(), rpsXml.getRetencao());
					} else {
						rpsXml.getNfe().setNumero(999L);
						rpsXml.getNfe().setCodVerificacao("AAA1-CCC2");
						rpsXml.getNfe().setDtEmissao(new Date());
						rpsXml.getNfe().setVlrBase(new BigDecimal(100.00));
						rpsXml.getNfe().setPercAliquota(new BigDecimal(5.00));
						rpsXml.getNfe().setVlrIssqn(new BigDecimal(5.00));
						rpsXml.getNfe().setVlrDeducao(new BigDecimal(0.00));
					}
				}

			} catch (SAXException e) {
				mensagem.append(this._mensagemRetorno("E160", "Arquivo em desacordo com o XML Schema.", "Consulte o Manual da NFS-e para saber quais são as versões de XML Schema suportadas pelo sistema."));
			} catch (MegaBusinessException e) {
				mensagem.append(this._mensagemRetorno("L000", e.getMessage(), null));
			}

        	return new Output(this._gerarNfseResponse(mensagem, rpsXml));
    }

    private String _mensagemRetorno(String codigo, String mensagem, String correcao) {

    	StringBuffer msg = new StringBuffer();

    	msg.append("<MensagemRetorno>\n")
		   .append("	<Codigo>").append(codigo).append("</Codigo>\n")
		   .append("	<Mensagem>").append(mensagem).append("</Mensagem>\n");

    	if (null != correcao && !"".equals(correcao))
    		msg.append("	<Correcao>").append(correcao).append("</Correcao>\n");

    	msg.append("</MensagemRetorno>\n");

    	return msg.toString();
    }

    private String _gerarNfseResponse(StringBuffer mensagem, RpsXmlNfeBean rpsXmlBean) {

    	StringBuffer xml = new StringBuffer();
    	xml.append("<?xml version=\"1.0\"?>\n")
    	   .append("<GerarNfseResposta xmlns=\"http://megasoftarrecadanet.com.br/xsd/nfse_v01.xsd\">\n");

    	if (rpsXmlBean != null && rpsXmlBean.getNfe().getNumero() != null) {
    		Prefeitura prefeitura = new PrefeituraBusiness().get();
    		NfeMunicipal nfe = rpsXmlBean.getNfe();
	    	xml.append("<ListaNfse>\n")
			   .append("	<CompNfse>\n")
			   .append("		<Nfse versao=\"1.00\">\n")
			   .append("			<InfNfse>\n")
			   .append("				<Numero>").append(nfe.getNumero()).append("</Numero>\n")
			   .append("				<CodigoVerificacao>").append(nfe.getCodVerificacao()).append("</CodigoVerificacao>\n")
			   .append("				<DataEmissao>").append(DateUtil.dtTimeXml(nfe.getDtEmissao())).append("</DataEmissao>\n")
			   .append("				<ValoresNfse>\n")
			   .append("					<BaseCalculo>").append(nfe.getVlrBase()).append("</BaseCalculo>\n")
			   .append("					<Aliquota>").append(nfe.getPercAliquota()).append("</Aliquota>\n")
			   .append("					<ValorIss>").append(nfe.getVlrIssqn()).append("</ValorIss>\n")
			   .append("					<Deducao>").append(nfe.getVlrDeducao()).append("</Deducao>\n")
			   .append("				</ValoresNfse>\n")
			   .append("				<PrestadorServico>\n")
			   .append("					<IdentificacaoPrestador>\n")
			   .append("						<CpfCnpj>\n");

			if (CpfCnpjUtil.isCpf(nfe.getEconomicoCpfCnpj())) {	
				xml.append("							<Cpf>").append(StringUtil.clean(nfe.getEconomicoCpfCnpj())).append("</Cpf>\n");
			} else if (CpfCnpjUtil.isCnpj(nfe.getEconomicoCpfCnpj())) {
			   	xml.append("							<Cnpj>").append(StringUtil.clean(nfe.getEconomicoCpfCnpj())).append("</Cnpj>\n");
    		}

			  xml.append("						</CpfCnpj>\n")
			   .append("						<InscricaoMunicipal>").append(nfe.getEconomicoInscMunicipal()).append("</InscricaoMunicipal>\n")
			   .append("					</IdentificacaoPrestador>\n")
			   .append("					<RazaoSocial>").append(nfe.getEconomicoRazaoSocial()).append("</RazaoSocial>\n")
			   .append("					<NomeFantasia>").append(nfe.getEconomicoNome()).append("</NomeFantasia>\n")
			   .append("					<Endereco>\n")
			   .append("						<Endereco>").append(nfe.getEconomicoEndereco()).append("</Endereco>\n")
			   .append("						<Numero>").append(nfe.getEconomicoNumero()).append("</Numero>\n")
			   .append("						<Complemento>").append(nfe.getEconomicoComplemento()).append("</Complemento>\n")
			   .append("						<Bairro>").append(nfe.getEconomicoBairro()).append("</Bairro>\n")
			   .append("						<Cep>").append(StringUtil.clean(nfe.getEconomicoCep())).append("</Cep>\n")
			   .append("					</Endereco>\n")
//			   .append("					<Contato>\n")
//			   .append("						<Telefone>").append("</Telefone>\n")
//			   .append("						<Email>").append("</Email>\n")
//			   .append("					</Contato>\n")
			   .append("				</PrestadorServico>\n")
			   .append("				<OrgaoGerador>\n")
			   .append("						<CodigoMunicipio>").append(prefeitura.getMunicipio().getId()).append("</CodigoMunicipio>\n")
			   .append("						<Uf>").append(prefeitura.getMunicipio().getUf()).append("</Uf>\n")
			   .append("				</OrgaoGerador>\n")
			   .append("                <DeclaracaoPrestacaoServico>\n")
			   .append("					").append(rpsXmlBean.getNfe().getRps().getXml())
			   .append("                </DeclaracaoPrestacaoServico>\n")
			   .append("			</InfNfse>\n")
			   .append("		</Nfse>\n")
			   .append("	</CompNfse>\n")
			   .append("</ListaNfse>\n");
    	} else {

    		if (rpsXmlBean != null) {
	    		for (String erro : rpsXmlBean.getErro()) {
					mensagem.append(this._mensagemRetorno("L000", erro, null));
				}
    		}

    		if (mensagem.length() > 0) {
				xml.append("<ListaMensagemRetorno>\n")
		     	   .append(mensagem)
		     	   .append("</ListaMensagemRetorno>\n");
    		}

    	}
    	
    	xml.append("</GerarNfseResposta>");

    	return xml.toString();
    }
    
    private void _validaXmlXsd(byte[] xml) throws SAXException, MegaBusinessException {

    	File xsdFile = new File(this.getClass().getResource(XSD).getFile()); // read XSD file
        Schema schema = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI).newSchema(xsdFile);
		Validator validator = schema.newValidator();
		try {
			validator.validate(new StreamSource( new ByteArrayInputStream(xml) ));
		} catch (IOException e) {
			throw new MegaBusinessException(e);
		}
    }
    
    private RpsXmlNfeBean _gerarNfseHandlerXML(byte[] xml) throws MegaBusinessException {

    	NfeMunicipalRpsXmlWsHandler handler = new NfeMunicipalRpsXmlWsHandler();
		SAXParserFactory factory = SAXParserFactory.newInstance();
		try {
			SAXParser parser = factory.newSAXParser();
			parser.parse(new ByteArrayInputStream(xml), handler);
		} catch (ParserConfigurationException | SAXException | IOException e) {
			throw new MegaBusinessException(e);
		}

		return handler.getRpsXmlNfeBean();
    }

    public Output consultarNfsePorRps(Input parameters) { 

    	Long numero, inscMunicipal;
    	String cpfCnpj = null;
    	NfeMunicipal nfe = null;
    	StringBuffer mensagem = new StringBuffer();

    	// Valida XML Dados
		try {
			
			System.err.println(parameters.getNfseDadosMsg());
			
			byte[] xmlDados = parameters.getNfseDadosMsg().getBytes();
			
			this._validaXmlXsd(parameters.getNfseCabecMsg().getBytes());

			this._validaXmlXsd(xmlDados);

			DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
			DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
			Document doc = dBuilder.parse(new ByteArrayInputStream(xmlDados));

			if(!"ConsultarNfseRpsEnvio".equals(doc.getDocumentElement().getNodeName()))
				throw new SAXException();

			numero = Long.parseLong(doc.getElementsByTagName("Numero").item(0).getTextContent());
			
			if (doc.getElementsByTagName("Cnpj") != null) {
				cpfCnpj = doc.getElementsByTagName("Cnpj").item(0).getTextContent();
			} else if (doc.getElementsByTagName("Cpf") != null) {
				cpfCnpj = doc.getElementsByTagName("Cpf").item(0).getTextContent();
			}

			if ("".equals(doc.getElementsByTagName("InscricaoMunicipal").item(0).getTextContent().trim()))
				throw new MegaBusinessException("Informe a Inscrição Municipal do Prestador");

			inscMunicipal = Long.parseLong(doc.getElementsByTagName("InscricaoMunicipal").item(0).getTextContent().trim());

        	// Verifica Prestador
			NfeMunicipalWs municipalWs = new NfeMunicipalWsDao().consultaCpfCnpjInscMunicipal(cpfCnpj, inscMunicipal);
			if (null == municipalWs || municipalWs.getStatus() == NfeMunicipalWsEnum.C)
				throw new MegaBusinessException("Prestador não autorizado.");

			// Consulta RPS
			nfe = new NfeMunicipalDao().findNfeRpsNumero(municipalWs.getEconomico().getId(), numero);

			if (null == nfe)
				mensagem.append(this._mensagemRetorno("L000", "RPS não encontrada.", ""));

		} catch (SAXException | ParserConfigurationException  e) {
			mensagem.append(this._mensagemRetorno("E160", "Arquivo em desacordo com o XML Schema.", "Consulte o Manual da NFS-e para saber quais são as versões de XML Schema suportadas pelo sistema."));
		} catch (MegaBusinessException | IOException e) {
			mensagem.append(this._mensagemRetorno("L000", e.getMessage(), null));
		}

        return new Output(this._consultarNfsePorRpsResponse(mensagem, nfe));
        
    }

    private String _consultarNfsePorRpsResponse(StringBuffer mensagem, NfeMunicipal nfe) {

    	StringBuffer xml = new StringBuffer();
    	xml.append("<?xml version=\"1.0\"?>\n")
    	   .append("<ConsultarNfseRpsResposta xmlns=\"http://megasoftarrecadanet.com.br/xsd/nfse_v01.xsd\">\n");

    	if (nfe != null) {
    		Prefeitura prefeitura = new PrefeituraBusiness().get();
	    	xml.append("	<CompNfse>\n")
			   .append("		<Nfse versao=\"1.00\">\n")
			   .append("			<InfNfse>\n")
			   .append("				<Numero>").append(nfe.getNumero()).append("</Numero>\n")
			   .append("				<CodigoVerificacao>").append(nfe.getCodVerificacao()).append("</CodigoVerificacao>\n")
			   .append("				<DataEmissao>").append(DateUtil.dtTimeXml(nfe.getDtEmissao())).append("</DataEmissao>\n")
			   .append("				<ValoresNfse>\n")
			   .append("					<BaseCalculo>").append(nfe.getVlrBase()).append("</BaseCalculo>\n")
			   .append("					<Aliquota>").append(nfe.getPercAliquota()).append("</Aliquota>\n")
			   .append("					<ValorIss>").append(nfe.getVlrIssqn()).append("</ValorIss>\n")
			   .append("					<Deducao>").append(nfe.getVlrDeducao()).append("</Deducao>\n")
			   .append("				</ValoresNfse>\n")
			   .append("				<PrestadorServico>\n")
			   .append("					<IdentificacaoPrestador>\n")
			   .append("						<CpfCnpj>\n");

			if (CpfCnpjUtil.isCpf(nfe.getEconomicoCpfCnpj())) {	
				xml.append("							<Cpf>").append(StringUtil.clean(nfe.getEconomicoCpfCnpj())).append("</Cpf>\n");
			} else if (CpfCnpjUtil.isCnpj(nfe.getEconomicoCpfCnpj())) {
			   	xml.append("							<Cnpj>").append(StringUtil.clean(nfe.getEconomicoCpfCnpj())).append("</Cnpj>\n");
    		}

			  xml.append("						</CpfCnpj>\n")
			   .append("						<InscricaoMunicipal>").append(nfe.getEconomicoInscMunicipal()).append("</InscricaoMunicipal>\n")
			   .append("					</IdentificacaoPrestador>\n")
			   .append("					<RazaoSocial>").append(nfe.getEconomicoRazaoSocial()).append("</RazaoSocial>\n")
			   .append("					<NomeFantasia>").append(nfe.getEconomicoNome()).append("</NomeFantasia>\n")
			   .append("					<Endereco>\n")
			   .append("						<Endereco>").append(nfe.getEconomicoEndereco()).append("</Endereco>\n")
			   .append("						<Numero>").append(nfe.getEconomicoNumero()).append("</Numero>\n")
			   .append("						<Complemento>").append(nfe.getEconomicoComplemento()).append("</Complemento>\n")
			   .append("						<Bairro>").append(nfe.getEconomicoBairro()).append("</Bairro>\n")
			   .append("						<Cep>").append(StringUtil.clean(nfe.getEconomicoCep())).append("</Cep>\n")
			   .append("					</Endereco>\n")
//			   .append("					<Contato>\n")
//			   .append("						<Telefone>").append("</Telefone>\n")
//			   .append("						<Email>").append("</Email>\n")
//			   .append("					</Contato>\n")
			   .append("				</PrestadorServico>\n")
			   .append("				<OrgaoGerador>\n")
			   .append("						<CodigoMunicipio>").append(prefeitura.getMunicipio().getId()).append("</CodigoMunicipio>\n")
			   .append("						<Uf>").append(prefeitura.getMunicipio().getUf()).append("</Uf>\n")
			   .append("				</OrgaoGerador>\n")
			   .append("                <DeclaracaoPrestacaoServico>\n")
			   .append("					").append(nfe.getRps().getXml())
			   .append("                </DeclaracaoPrestacaoServico>\n")
			   .append("			</InfNfse>\n")
			   .append("		</Nfse>\n")
			   .append("	</CompNfse>\n");
    	} else {
			if (mensagem.length() > 0) {
				xml.append("<ListaMensagemRetorno>\n")
		     	   .append(mensagem)
		     	   .append("</ListaMensagemRetorno>\n");
			}
    	}

    	xml.append("</ConsultarNfseRpsResposta>");

    	return xml.toString();
    }

}
